<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd">



    <bean id="dataSourceInitializer" class="org.springframework.jdbc.datasource.init.DataSourceInitializer">
        <property name="dataSource" ref="dataSource"/>
        <property name="enabled" value="${database.init}"/>
        <property name="databasePopulator">
            <bean class="org.springframework.jdbc.datasource.init.ResourceDatabasePopulator">
                <property name="sqlScriptEncoding" value="UTF-8"/>
                <property name="scripts">
                    <list>
                        <value>classpath:db/initDB.sql</value>
                        <value>classpath:db/populateDB.sql</value>
                    </list>
                </property>
            </bean>
        </property>
    </bean>


<!--    <jdbc:initialize-database data-source="dataSource" enabled="${database.init}" >
        <jdbc:script location="classpath:db/initDB.sql"/>
        <jdbc:script location="classpath:db/populateDB.sql"/>
    </jdbc:initialize-database>-->

    <bean class="ru.jevent.util.DbPopulator">
        <constructor-arg name="scriptLocation" value="classpath:db/populateDB.sql"/>
    </bean>


    <beans profile="postgres">
        <context:property-placeholder location="classpath:db/postgres.properties" system-properties-mode="OVERRIDE"/>
        <!--Class for datasource without pooling-->
        <!--org.springframework.jdbc.datasource.DriverManagerDataSource-->

        <bean id="dataSource"
              class="org.apache.tomcat.jdbc.pool.DataSource">
            <property name="driverClassName" value="${database.driverClassName}"/>
            <property name="url" value="${database.url}"/>
            <property name="username" value="${database.username}"/>
            <property name="password" value="${database.password}"/>
        </bean>
    </beans>

    <beans profile="jdbc">
        <context:component-scan base-package="ru.jevent.**.repository.jdbc"/>

        <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
            <constructor-arg ref="dataSource"/>
        </bean>

        <bean id="namedJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
            <constructor-arg ref="dataSource"/>
        </bean>
    </beans>

    <beans profile="jpa">
        <context:component-scan base-package="ru.jevent.**.repository.jpa"/>

        <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
              p:dataSource-ref="dataSource"
              p:packagesToScan="ru.jevent.model">
            <!--p:persistenceUnitName="persistenceUnit">-->

            <property name="jpaPropertyMap">
                <map>
                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).FORMAT_SQL}" value="${hibernate.format_sql}"/>
                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_SQL_COMMENTS}" value="${hibernate.use_sql_comments}"/>
                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).ENABLE_LAZY_LOAD_NO_TRANS}" value="true"/>
                </map>
            </property>

            <property name="jpaVendorAdapter">
                <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
                      p:showSql="${jpa.showSql}"
                      p:databasePlatform="org.hibernate.dialect.PostgreSQL9Dialect">
                </bean>
            </property>
        </bean>

        <tx:annotation-driven/>

        <!-- Transaction manager for a single JPA EntityManagerFactory (alternative to JTA) -->
        <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
              p:entityManagerFactory-ref="entityManagerFactory"/>


    </beans>

    <beans profile="tomcat">
        <jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/jevent"/>
        <context:property-placeholder location="classpath:db/tomcat.properties" system-properties-mode="OVERRIDE"/>
    </beans>

</beans>